__author__ = 'netwokz'

# Raspberry Pi Temperature Logger Stephen M Deane Jr 
# www.thepowerofpi.com 6/5/2015

import time 
import datetime 
import weather 
import Adafruit_CharLCD as LCD

# Raspberry Pi pin configuration:
lcd_rs        = 27  
lcd_en        = 22
lcd_d4        = 25
lcd_d5        = 24
lcd_d6        = 23
lcd_d7        = 18
lcd_backlight = 4 # Currently not used

# Define LCD column and row size for 16x2 LCD.
lcd_columns = 16
lcd_rows    = 2

# String Templates
mTemp = "Temperature: "
mHum  = "Humidity: "

# Initialize the LCD using the pins above.
lcd = LCD.Adafruit_CharLCD(lcd_rs, lcd_en, lcd_d4, lcd_d5, lcd_d6, lcd_d7, lcd_columns, lcd_rows, lcd_backlight)

def temperature():
    temp = weather.return_weather()
    return temp 
     
def playupdate():
    lcd.clear()
	lcd.message('    Updating    \n*')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n**')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n***')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n****')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n*****')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n******')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n*******')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n********')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n*********')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n**********')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n***********')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n************')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n*************')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n**************')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n***************')
	time.sleep(0.5)
	lcd.clear()
	lcd.message('    Updating    \n****************')
	time.sleep(0.5)
	lcd.clear()
try:
	while True:   
		outvalue = temperature()
		lcd.clear()
		playUpdate()
		lcd.clear()
		lcd.message(mTemp + str(outvalue[0]) + "F \n" + mHum + str(outvalue[1]) + "% ")
		# log temperature every 60 seconds
		time.sleep(15)
		lcd.clear()
except KeyboardInterrupt:
	lcd.clear()
